NANO_BOOT2CFG="-h"
NANO_BOOTLOADER="boot/boot0"
NANO_KERNEL=SK6501
NANO_NAME=sk6501
NANO_DRIVE=da0
NANO_MEDIASIZE=`expr -e 16008609792 / 512` # 16G SanDisk Cruzer Fit
NANO_RAM_ETCSIZE=`expr -e 10485760 / 512`
NANO_RAM_TMPVARSIZE=`expr -e 52428800 / 512`
NANO_MODULES="coretemp pf pflog usb"
NANO_PACKAGE_LIST="apcupsd \
ca_root_nss \
darkstat \
dnscrypt-proxy \
dnsmasq \
dnstop \
feather \
iftop \
iperf \
isc-dhcp43-server \
mtr-nox11 \
ncdu \
nmap \
libressl \
lsof \
perl5 \
pftop \
py27-speedtest-cli \
python2 \
ssmtp \
tarsnap \
tmux \
vim-lite"

cust_comconsole_vt100() {
  sed -i "" -e /ttyu0/s/dialup/vt100/ ${NANO_WORLDDIR}/etc/ttys
}

cust_loader_conf() {
  cat << EOF >> ${NANO_WORLDDIR}/boot/loader.conf
beastie_disable="YES"
hint.acpi.0.disabled=1
coretemp_load="YES"
hw.em.smart_pwr_down=1
autoboot_delay="3"
hint.p4tcc.0.disabled="0"
EOF
}

# http://freebsd.1045724.n5.nabble.com/10-0-BETA3-nanobsd-sh-does-not-use-pkg-tp5862439p5862531.html
cust_pkgng() {
  TEMP_RESOLV_CONF=${NANO_WORLDDIR}/etc/resolv.conf
  echo "nameserver 8.8.8.8" > ${TEMP_RESOLV_CONF}
  LOCAL_REPO_DIR=${NANO_WORLDDIR}/usr/local/etc/pkg/repos
  mkdir -p ${LOCAL_REPO_DIR}
  cat << EOF >> ${LOCAL_REPO_DIR}/FreeBSD.conf
FreeBSD: {
  url: "pkg+http://pkg.FreeBSD.org/\${ABI}/latest"
}
EOF
  pkg -c ${NANO_WORLDDIR} install -y ${NANO_PACKAGE_LIST}
  rm ${TEMP_RESOLV_CONF}
}

cust_openntpd_from_ports() {
  portsnap -p ${NANO_WORLDDIR}/usr/ports fetch extract
  echo "DEFAULT_VERSIONS+=ssl=libressl" >> ${NANO_WORLDDIR}/etc/make.conf
  chroot ${NANO_WORLDDIR} /bin/sh -exc 'make -C /usr/ports/net/openntpd install clean BATCH=yes'
  rm ${NANO_WORLDDIR}/etc/make.conf
  rm -Rf ${NANO_WORLDDIR}/usr/ports
}

cust_cleanup_pkg() {
  pkg -c ${NANO_WORLDDIR} clean -ay
  rm -Rf ${NANO_WORLDDIR}/var/db/pkg
  rm -Rf ${NANO_WORLDDIR}/conf/base/var/db/pkg
}

cust_timezone() {
  cp ${NANO_WORLDDIR}/usr/share/zoneinfo/Europe/Helsinki ${NANO_WORLDDIR}/etc/localtime
}

cust_console_log() {
  sed -i "" -e "s/^#\(console\.info.*\)/\1/" ${NANO_WORLDDIR}/etc/syslog.conf
  cat << EOF >> ${NANO_WORLDDIR}/etc/rc.d/var
if [ ! -f /var/log/console.log ]; then
  touch /var/log/console.log; chmod 600 /var/log/console.log
fi
EOF
}

cust_dyfi_update() {
  fetch -o - https://www.dy.fi/files/dyfi-update-pl-1.2.0.tar.gz | tar xzf - -C ${NANO_WORLDDIR}/usr/local/bin --strip-components 1 dyfi-update-pl-1.2.0/dyfi-update.pl
  sed -i "" -e "s/#!\/usr\/bin\/perl/#!\/usr\/bin\/env perl/" ${NANO_WORLDDIR}/usr/local/bin/dyfi-update.pl
}

fetch_and_install_script() {
  URL=$1
  DEST_PATH_PREFIX=${2:-/usr/local/bin}
  SCRIPT_DEST_PATH=${NANO_WORLDDIR}${DEST_PATH_PREFIX}/${URL##*/}
  fetch ${URL} -o ${SCRIPT_DEST_PATH} && chmod +x ${SCRIPT_DEST_PATH}
}

# https://gist.github.com/steakknife/02832ff104df3483c012
cust_dnscrypt_proxy_init_script() {
  fetch_and_install_script "https://gist.githubusercontent.com/steakknife/02832ff104df3483c012/raw/83bcfe7250836041b17e4d52bafe851695cbce92/dnscrypt-proxy" "/usr/local/etc/rc.d"
}

cust_symlink_python() {
  ln -s /usr/local/bin/python2 ${NANO_WORLDDIR}/usr/local/bin/python
}

customize_cmd cust_comconsole
customize_cmd cust_comconsole_vt100
customize_cmd cust_install_files
customize_cmd cust_loader_conf
customize_cmd cust_pkgng
customize_cmd cust_openntpd_from_ports
customize_cmd cust_timezone
customize_cmd cust_console_log
customize_cmd cust_dyfi_update
customize_cmd cust_dnscrypt_proxy_init_script
customize_cmd cust_symlink_python
customize_cmd cust_cleanup_pkg
